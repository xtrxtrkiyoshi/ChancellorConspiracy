{"ast":null,"code":"var _jsxFileName = \"/home/aikee/Desktop/ChancellorConspiracy/src/Board.js\";\nimport React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: 2,\n      grid: Array(2).fill(0).map(x => Array(2).fill(\"+\")),\n      noSolution: null,\n      currentView: 1,\n      solutions: [\"\"],\n      fileReader: null\n    };\n    this.onBackward = this.onBackward.bind(this);\n    this.onForward = this.onForward.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.generateSolutions = this.generateSolutions.bind(this);\n    this.before = this.before.bind(this);\n    this.after = this.after.bind(this);\n    this.occupyBoard = this.occupyBoard.bind(this);\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n  }\n\n  onBackward() {\n    if (this.state.size > 1) {\n      let temp = this.state.size - 1;\n      this.setState({\n        size: temp\n      });\n      this.setState({\n        grid: Array(temp).fill(0).map(x => Array(temp).fill(\"+\"))\n      });\n    }\n  }\n\n  onForward() {\n    let temp = this.state.size + 1;\n    this.setState({\n      size: temp\n    });\n    this.setState({\n      grid: Array(temp).fill(0).map(x => Array(temp).fill(\"+\"))\n    });\n  }\n\n  handleInput(e) {\n    this.setState({\n      size: parseInt(e.target.value, 10)\n    });\n\n    if (e.target.value !== \"\") {\n      this.setState({\n        grid: Array(parseInt(e.target.value, 10)).fill(0).map(x => Array(parseInt(e.target.value, 10)).fill(\"+\"))\n      });\n    }\n  }\n\n  after() {\n    if (this.state.currentView + 1 <= this.state.noSolution) {\n      let temp = this.state.currentView + 1;\n      this.setState({\n        currentView: temp\n      });\n      this.occupyBoard();\n    }\n  }\n\n  before() {\n    if (this.state.currentView - 1 > 0) {\n      let temp = this.state.currentView - 1;\n      this.setState({\n        currentView: temp\n      });\n      this.occupyBoard();\n    }\n  }\n\n  occupyBoard() {\n    let temp = new Array(this.state.size); //generating board\n\n    for (let m = 0; m < this.state.size; m++) {\n      //pseudocode\n      //this.state.grid[i][this.state.solutions[this.state.currentView-1][i]-1] = <Square key={i+\"_\"+(this.state.solutions[this.state.currentView-1][i]-1)} value=\"C\"/>;\n      // console.log(this.state.grid.map((r, i) => {return \n      //     {r.find((d, j) => { return\n      //       (d.key === (m+\"_\"+(this.state.solutions[this.state.currentView-1][m]-1)\n      //         ))})}}\n      //   ));\n      temp[m] = new Array(this.state.size); //occupy first with \"+\"\n\n      for (let n = 0; n < this.state.size; n++) {\n        temp[m][n] = \"+\";\n      } //place chancies\n\n\n      temp[m][this.state.solutions[this.state.currentView - 1][m] - 1] = \"C\";\n    }\n\n    this.setState({\n      grid: temp\n    });\n  }\n\n  handleFileChosen(file) {\n    let temp = new FileReader();\n    temp.readAsText(file);\n    this.setState({\n      fileReader: temp\n    });\n  }\n\n  generateSolutions() {\n    let initialized_arr = new Array(this.state.size);\n    let start = 0;\n    let move = 0;\n    let nopts = new Array(this.state.size + 2);\n    let option = new Array(this.state.size + 2);\n    let i = 0;\n    let candidate = 0;\n    let duplicate_temp = 0;\n    let candidate_count = 0;\n    let candidate_sequence = 0;\n    let duplicate_invalid = 0;\n    let count = 0;\n    let noSolutions = 0;\n    let tempSolutions = [];\n    let solution = \"\"; //created 2D array for stack\n\n    for (let i = 0; i < this.state.size + 2; i++) {\n      option[i] = new Array(this.state.size + 2);\n    }\n\n    nopts[start] = 1;\n\n    while (nopts[start] > 0) {\n      //while dummy stack is not empty\n      if (nopts[move] > 0) {\n        move++;\n        nopts[move] = 0; //initialize new move\n\n        if (move === this.state.size + 1) {\n          //solution found\n          candidate_sequence = 0;\n\n          for (let i = 1; i < move; i++) {\n            if (option[i][nopts[i]] === initialized_arr[i - 1] || initialized_arr[i - 1] === 0) {//no block of code                \n            } else {\n              candidate_sequence = 1;\n              duplicate_invalid = 1;\n            }\n          }\n\n          if (candidate_sequence !== 0) {\n            duplicate_invalid = 0;\n            count++;\n            solution = \"\";\n\n            for (let i = 1; i < move; i++) {\n              //prints a solution to a string\n              solution = solution + option[i][nopts[i]];\n            } //adds to array of solutions\n\n\n            tempSolutions[noSolutions] = solution;\n            noSolutions++;\n          }\n\n          duplicate_temp = 0;\n          candidate_count = 0;\n        } else if (move === 1) {\n          for (candidate = this.state.size; candidate >= 1; candidate--) {\n            nopts[move]++;\n            option[move][nopts[move]] = candidate;\n          }\n        } else {\n          for (candidate = this.state.size; candidate >= 1; candidate--) {\n            for (i = move - 1; i >= 1; i--) {\n              if (candidate === option[i][nopts[i]]) break;\n            }\n\n            if (!(i >= 1) && Math.abs(option[move - 1][nopts[move - 1]] - candidate) !== 2) {\n              if (option[move - 2][nopts[move - 2]] === 0) {\n                option[move][++nopts[move]] = candidate;\n                candidate_count += 1;\n              } else if (Math.abs(option[move - 2][nopts[move - 2]] - candidate) !== 1) {\n                option[move][++nopts[move]] = candidate;\n                candidate_count += 1;\n              }\n            }\n          }\n        }\n      } else {\n        move--;\n        nopts[move]--;\n      }\n    }\n\n    const arr = [...tempSolutions, ...this.state.solutions];\n    this.setState({\n      currentView: 1,\n      noSolution: count\n    });\n    this.setState({\n      solutions: arr\n    }, () => this.occupyBoard());\n    this.occupyBoard();\n  }\n\n  render() {\n    const style = {\n      margin: 'auto',\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: 'darkorange',\n      color: 'white',\n      fontSize: \"3em\"\n    };\n    const rows = this.state.grid.map((r, i) => {\n      return React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, r.map((d, j) => {\n        return this.state.grid[i][j] === \"C\" ? React.createElement(Square, {\n          key: i + \"_\" + j,\n          value: \"C\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }) : React.createElement(Square, {\n          key: i + \"_\" + j,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        });\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Board Size\", React.createElement(\"button\", {\n      onClick: this.onBackward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \" - \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.size,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \" + \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.generateSolutions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \" Generate Solutions \"), this.state.noSolution ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.before,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \" - \"), this.state.currentView, \" of \", this.state.noSolution, React.createElement(\"button\", {\n      onClick: this.after,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \" + \")) : null), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, rows))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"input-file\",\n      accept: \".txt\",\n      onChange: e => this.handleFileChosen(e.target.files[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/aikee/Desktop/ChancellorConspiracy/src/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","size","grid","Array","fill","map","x","noSolution","currentView","solutions","fileReader","onBackward","bind","onForward","handleInput","generateSolutions","before","after","occupyBoard","handleFileChosen","temp","setState","e","parseInt","target","value","m","n","file","FileReader","readAsText","initialized_arr","start","move","nopts","option","i","candidate","duplicate_temp","candidate_count","candidate_sequence","duplicate_invalid","count","noSolutions","tempSolutions","solution","Math","abs","arr","render","style","margin","width","height","backgroundColor","color","fontSize","rows","r","d","j","files"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Square from './Square';\n\nimport './Board.css';\n\nclass Board extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: 2,\n      grid: Array(2).fill(0).map(x=>Array(2).fill(\"+\")),\n      noSolution: null,\n      currentView: 1,\n      solutions: [\"\"],\n      fileReader: null\n    };\n\n    this.onBackward = this.onBackward.bind(this);\n    this.onForward = this.onForward.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.generateSolutions = this.generateSolutions.bind(this);\n    this.before = this.before.bind(this);\n    this.after = this.after.bind(this);\n    this.occupyBoard = this.occupyBoard.bind(this);\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n  }\n\n\n  onBackward() {\n    if(this.state.size > 1) {\n      let temp = this.state.size-1;\n      this.setState({size: temp}); \n      this.setState({grid: Array(temp).fill(0).map(x=>Array(temp).fill(\"+\"))});\n    }\n    \n  }\n\n  onForward() {\n    let temp = this.state.size+1;\n    this.setState({size: temp});\n    this.setState({grid: Array(temp).fill(0).map(x=>Array(temp).fill(\"+\"))});\n  }\n\n  handleInput(e) {\n    this.setState({size: parseInt(e.target.value, 10)});\n    if(e.target.value !== \"\"){\n      this.setState({grid: Array(parseInt(e.target.value, 10)).fill(0).map(x=>Array(parseInt(e.target.value, 10)).fill(\"+\"))})  \n    }\n    \n  }\n\n  after() {\n    if(this.state.currentView+1 <= this.state.noSolution){\n      let temp = this.state.currentView + 1;\n      this.setState({currentView: temp});\n      this.occupyBoard();\n    }\n  }\n\n  before() {\n    if(this.state.currentView-1 > 0){\n      let temp = this.state.currentView - 1;\n      this.setState({currentView: temp});\n      this.occupyBoard();\n    }\n  }\n\n   occupyBoard() {\n    let temp = new Array(this.state.size);\n    //generating board\n    for(let m = 0; m < this.state.size; m++) {\n      //pseudocode\n      //this.state.grid[i][this.state.solutions[this.state.currentView-1][i]-1] = <Square key={i+\"_\"+(this.state.solutions[this.state.currentView-1][i]-1)} value=\"C\"/>;\n      \n      // console.log(this.state.grid.map((r, i) => {return \n      //     {r.find((d, j) => { return\n      //       (d.key === (m+\"_\"+(this.state.solutions[this.state.currentView-1][m]-1)\n      //         ))})}}\n      //   ));\n      temp[m] = new Array(this.state.size);\n      //occupy first with \"+\"\n      for(let n = 0; n < this.state.size; n++) {\n        temp[m][n] = \"+\";\n      }\n      //place chancies\n      temp[m][this.state.solutions[this.state.currentView-1][m]-1] = \"C\";\n    }\n\n    this.setState({grid: temp});\n  }\n\n  handleFileChosen(file) {\n    let temp = new FileReader();\n    temp.readAsText(file);\n    this.setState({fileReader: temp});\n  }\n\n  generateSolutions() {\n    let initialized_arr = new Array(this.state.size);\n    let start = 0;\n    let move = 0;\n    let nopts = new Array(this.state.size+2);\n    let option = new Array(this.state.size+2);\n    let i = 0;\n    let candidate = 0;\n    let duplicate_temp = 0;\n    let candidate_count = 0;\n    let candidate_sequence = 0;\n    let duplicate_invalid = 0;\n    let count = 0;\n    let noSolutions = 0;\n    let tempSolutions = [];\n    let solution = \"\";\n\n    //created 2D array for stack\n    for (let i = 0; i < (this.state.size+2); i++ ) {\n      option[i] = new Array(this.state.size+2);   \n    }\n\n    nopts[start] = 1;\n\n    while(nopts[start] > 0) { //while dummy stack is not empty\n      if(nopts[move] > 0) {\n        move++;\n        nopts[move] = 0; //initialize new move\n        if(move === this.state.size + 1) { //solution found\n            candidate_sequence = 0;\n            for (let i = 1; i < move ; i++) {\n              if(option[i][nopts[i]] === initialized_arr[i-1] || initialized_arr[i-1] === 0) {\n//no block of code                \n              } else {\n                candidate_sequence = 1;\n                duplicate_invalid = 1;\n              }\n            }\n            if(candidate_sequence !== 0) {\n              duplicate_invalid = 0;\n              count++;\n              solution = \"\";\n              for(let i = 1; i < move; i++) {\n                  //prints a solution to a string\n                  solution = solution + option[i][nopts[i]];\n              }\n              //adds to array of solutions\n              tempSolutions[noSolutions] = solution;\n              noSolutions++;\n            }\n            duplicate_temp = 0;\n            candidate_count = 0;\n        } else if (move === 1) {\n          for(candidate = this.state.size; candidate >= 1; candidate--) {\n            nopts[move]++;\n            option[move][nopts[move]] = candidate;\n          }\n        } else {\n          for (candidate = this.state.size; candidate >= 1; candidate--) {\n          for(i = move-1; i>=1; i--) {\n            if(candidate === option[i][nopts[i]]) break;\n          } \n          if((!(i>=1)) && Math.abs(option[move-1][nopts[move-1]] - candidate) !== 2) {\n            if(option[move-2][nopts[move-2]] === 0) {\n              option[move][++nopts[move]] = candidate;\n              candidate_count += 1;\n            } else if(Math.abs(option[move-2][nopts[move-2]] - candidate) !== 1) {\n              option[move][++nopts[move]] = candidate;\n              candidate_count += 1;\n            }\n          }           \n          }\n\n        }\n      } else {\n        move--;\n        nopts[move]--;\n      }\n    }\n\n    const arr = [...tempSolutions, ...this.state.solutions];\n    this.setState({\n      currentView: 1,\n      noSolution: count \n    });\n    this.setState({solutions: arr}, () => this.occupyBoard());\n\n    this.occupyBoard();\n  }\n\n  render() {\n    const style = {\n        margin:'auto',\n        width: \"auto\",\n        height:\"auto\",\n        backgroundColor:'darkorange',\n        color:'white',\n        fontSize:\"3em\"\n      }\n      const rows = this.state.grid.map((r, i) => {return (\n        <tr key={\"row_\"+i}>\n          {r.map((d, j) => {return(\n            (this.state.grid[i][j] === \"C\")?\n            <Square\n              key={i+\"_\"+j}\n              value=\"C\"/>\n            :            \n            <Square\n              key={i+\"_\"+j}\n              value=\"\"/>\n                )\n              }\n            )\n          }\n          </tr>)\n          }\n        );\n    return(\n    <div>\n      <div>\n        Board Size\n        <button onClick={this.onBackward}> - </button>\n        <input type=\"number\" value={this.state.size} onChange={this.handleInput}/>\n        <button onClick={this.onForward}> + </button>\n      </div>\n      <div>\n        <button onClick={this.generateSolutions}> Generate Solutions </button>\n        {this.state.noSolution? \n          <div>\n            <button onClick={this.before}> - </button>\n            {this.state.currentView} of {this.state.noSolution}\n            <button onClick={this.after}> + </button>\n          </div>\n          : null}\n      </div>\n      <div className=\"container\">\n            <table cellSpacing=\"0\" id=\"table\" style={style}>\n              <tbody>\n                {rows}\n              </tbody>\n            </table>\n        </div>\n        <div>\n          <input type=\"file\"\n                  id=\"file\"\n                  className=\"input-file\"\n                  accept=\".txt\"\n                  onChange={e => this.handleFileChosen(e.target.files[0])}\n                  />\n        </div>\n    </div>);\n  }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}