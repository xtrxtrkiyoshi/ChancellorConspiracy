{"ast":null,"code":"var _jsxFileName = \"/home/aikee/Desktop/ChancellorConspiracy/src/Board.js\";\nimport React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: 2,\n      grid: Array(2).fill(0).map(x => Array(2).fill(\"+\")),\n      noSolution: null,\n      currentView: 0\n    };\n    this.onBackward = this.onBackward.bind(this);\n    this.onForward = this.onForward.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.generateSolutions = this.generateSolutions.bind(this);\n    this.before = this.before.bind(this);\n    this.after = this.after.bind(this);\n  }\n\n  onBackward() {\n    if (this.state.size > 1) {\n      let temp = this.state.size - 1;\n      this.setState({\n        size: temp\n      });\n      this.setState({\n        grid: Array(temp).fill(0).map(x => Array(temp).fill(\"+\"))\n      });\n    }\n  }\n\n  onForward() {\n    let temp = this.state.size + 1;\n    this.setState({\n      size: temp\n    });\n    this.setState({\n      grid: Array(temp).fill(0).map(x => Array(temp).fill(\"+\"))\n    });\n  }\n\n  handleInput(e) {\n    this.setState({\n      size: parseInt(e.target.value, 10)\n    });\n\n    if (e.target.value != \"\") {\n      this.setState({\n        grid: Array(parseInt(e.target.value, 10)).fill(0).map(x => Array(parseInt(e.target.value, 10)).fill(\"+\"))\n      });\n    }\n  }\n\n  after() {\n    let temp = this.state.currentView + 1;\n    this.setState({\n      currentView: temp\n    });\n  }\n\n  before() {\n    if (this.state.currentView - 1 < 0) {\n      let temp = this.state.currentView - 1;\n      this.setState({\n        currentView: temp\n      });\n    }\n  }\n\n  generateSolutions() {\n    let initialized_arr = new Array(this.state.size);\n    let start = 0;\n    let move = 0;\n    let nopts = new Array(this.state.size + 2);\n    let option = new Array(this.state.size + 2);\n    let i = 0;\n    let candidate = 0;\n    let duplicate_temp = 0;\n    let candidate_count = 0;\n    let candidate_sequence = 0;\n    let duplicate_invalid = 0;\n    let count = 0;\n    let noSolutions = 0;\n    let solutions = [];\n    let solution = \"\"; //created 2D array for stack\n\n    for (let i = 0; i < this.state.size + 2; i++) {\n      option[i] = new Array(this.state.size + 2);\n    }\n\n    nopts[start] = 1;\n\n    while (nopts[start] > 0) {\n      //while dummy stack is not empty\n      if (nopts[move] > 0) {\n        move++;\n        nopts[move] = 0; //initialize new move\n\n        if (move === this.state.size + 1) {\n          //solution found\n          candidate_sequence = 0;\n\n          for (let i = 1; i < move; i++) {\n            if (option[i][nopts[i]] === initialized_arr[i - 1] || initialized_arr[i - 1] === 0) {//no block of code  \t\t\t\t\t\t\t\n            } else {\n              candidate_sequence = 1;\n              duplicate_invalid = 1;\n            }\n          }\n\n          if (candidate_sequence !== 0) {\n            duplicate_invalid = 0;\n            count++;\n            solution = \"\";\n\n            for (let i = 1; i < move; i++) {\n              //prints a solution to a string\n              solution = solution + option[i][nopts[i]];\n            } //adds to array of solutions\n\n\n            solutions[noSolutions] = solution;\n            noSolutions++;\n          }\n\n          duplicate_temp = 0;\n          candidate_count = 0;\n        } else if (move === 1) {\n          for (candidate = this.state.size; candidate >= 1; candidate--) {\n            nopts[move]++;\n            option[move][nopts[move]] = candidate;\n          }\n        } else {\n          for (candidate = this.state.size; candidate >= 1; candidate--) {\n            for (i = move - 1; i >= 1; i--) {\n              if (candidate === option[i][nopts[i]]) break;\n            }\n\n            if (!(i >= 1) && Math.abs(option[move - 1][nopts[move - 1]] - candidate) !== 2) {\n              if (option[move - 2][nopts[move - 2]] === 0) {\n                option[move][++nopts[move]] = candidate;\n                candidate_count += 1;\n              } else if (Math.abs(option[move - 2][nopts[move - 2]] - candidate) !== 1) {\n                option[move][++nopts[move]] = candidate;\n                candidate_count += 1;\n              }\n            }\n          }\n        }\n      } else {\n        move--;\n        nopts[move]--;\n      }\n    }\n\n    for (i = 0; i < this.state.size; i++) {\n      this.state.grid[i][solutions[this.state.currentView][i]] = \"C\";\n      console.log(i);\n    }\n\n    this.setState({\n      noSolution: count,\n      currentView: 0\n    });\n  }\n\n  render() {\n    const style = {\n      margin: 'auto',\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: 'darkorange',\n      color: 'white',\n      fontSize: \"3em\"\n    };\n    const rows = this.state.grid.map((r, i) => {\n      return React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, r.map((d, j) => {\n        return React.createElement(Square, {\n          key: i + \"_\" + j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Increase Board Size\", React.createElement(\"button\", {\n      onClick: this.onBackward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" - \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.size,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" + \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.generateSolutions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \" Generate Solutions \"), this.state.noSolution ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.before,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" - \"), this.state.currentView, \" of \", this.state.noSolution, React.createElement(\"button\", {\n      onClick: this.after,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" + \")) : null), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, rows))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/aikee/Desktop/ChancellorConspiracy/src/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","size","grid","Array","fill","map","x","noSolution","currentView","onBackward","bind","onForward","handleInput","generateSolutions","before","after","temp","setState","e","parseInt","target","value","initialized_arr","start","move","nopts","option","i","candidate","duplicate_temp","candidate_count","candidate_sequence","duplicate_invalid","count","noSolutions","solutions","solution","Math","abs","console","log","render","style","margin","width","height","backgroundColor","color","fontSize","rows","r","d","j"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Square from './Square';\n\nimport './Board.css';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsize: 2,\n\t\t\tgrid: Array(2).fill(0).map(x=>Array(2).fill(\"+\")),\n\t\t\tnoSolution: null,\n\t\t\tcurrentView: 0\n\t\t};\n\n\t\tthis.onBackward = this.onBackward.bind(this);\n  \tthis.onForward = this.onForward.bind(this);\n  \tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.generateSolutions = this.generateSolutions.bind(this);\n\t\tthis.before = this.before.bind(this);\n\t\tthis.after = this.after.bind(this);\n\t}\n\n\n  onBackward() {\n    if(this.state.size > 1) {\n      let temp = this.state.size-1;\n      this.setState({size: temp}); \n      this.setState({grid: Array(temp).fill(0).map(x=>Array(temp).fill(\"+\"))});\n    }\n    \n  }\n\n  onForward() {\n    let temp = this.state.size+1;\n    this.setState({size: temp});\n\tthis.setState({grid: Array(temp).fill(0).map(x=>Array(temp).fill(\"+\"))});\n  }\n\n  handleInput(e) {\n  \tthis.setState({size: parseInt(e.target.value, 10)});\n  \tif(e.target.value != \"\"){\n  \t\tthis.setState({grid: Array(parseInt(e.target.value, 10)).fill(0).map(x=>Array(parseInt(e.target.value, 10)).fill(\"+\"))})\t\n  \t}\n  \t\n  }\n\n  after() {\n  \tlet temp = this.state.currentView + 1;\n  \tthis.setState({currentView: temp});\n  }\n\n  before() {\n    if(this.state.currentView-1 < 0){\n      let temp = this.state.currentView - 1;\n      this.setState({currentView: temp});\n  \n    }\n  }\n\n  generateSolutions() {\n  \tlet initialized_arr = new Array(this.state.size);\n  \tlet start = 0;\n  \tlet move = 0;\n  \tlet nopts = new Array(this.state.size+2);\n  \tlet option = new Array(this.state.size+2);\n  \tlet i = 0;\n  \tlet candidate = 0;\n  \tlet duplicate_temp = 0;\n  \tlet candidate_count = 0;\n  \tlet candidate_sequence = 0;\n  \tlet duplicate_invalid = 0;\n  \tlet count = 0;\n    let noSolutions = 0;\n    let solutions = [];\n    let solution = \"\";\n\n  \t//created 2D array for stack\n  \tfor (let i = 0; i < (this.state.size+2); i++ ) {\n  \t\toption[i] = new Array(this.state.size+2);\t\t\n  \t}\n\n  \tnopts[start] = 1;\n\n  \twhile(nopts[start] > 0) { //while dummy stack is not empty\n  \t\tif(nopts[move] > 0) {\n  \t\t\tmove++;\n  \t\t\tnopts[move] = 0; //initialize new move\n  \t\t\tif(move === this.state.size + 1) { //solution found\n  \t\t\t\t\tcandidate_sequence = 0;\n  \t\t\t\t\tfor (let i = 1; i < move ; i++) {\n  \t\t\t\t\t\tif(option[i][nopts[i]] === initialized_arr[i-1] || initialized_arr[i-1] === 0) {\n//no block of code  \t\t\t\t\t\t\t\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tcandidate_sequence = 1;\n  \t\t\t\t\t\t\tduplicate_invalid = 1;\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t\tif(candidate_sequence !== 0) {\n  \t\t\t\t\t\tduplicate_invalid = 0;\n  \t\t\t\t\t\tcount++;\n  \t\t\t\t\t\tsolution = \"\";\n              for(let i = 1; i < move; i++) {\n                  //prints a solution to a string\n                  solution = solution + option[i][nopts[i]];\n  \t\t\t\t\t\t}\n              //adds to array of solutions\n              solutions[noSolutions] = solution;\n              noSolutions++;\n  \t\t\t\t\t}\n  \t\t\t\t\tduplicate_temp = 0;\n  \t\t\t\t\tcandidate_count = 0;\n  \t\t\t} else if (move === 1) {\n  \t\t\t\tfor(candidate = this.state.size; candidate >= 1; candidate--) {\n  \t\t\t\t\tnopts[move]++;\n  \t\t\t\t\toption[move][nopts[move]] = candidate;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tfor (candidate = this.state.size; candidate >= 1; candidate--) {\n\t\t\t\t\tfor(i = move-1; i>=1; i--) {\n\t\t\t\t\t\tif(candidate === option[i][nopts[i]]) break;\n\t\t\t\t\t} \n\t\t\t\t\tif((!(i>=1)) && Math.abs(option[move-1][nopts[move-1]] - candidate) !== 2) {\n\t\t\t\t\t\tif(option[move-2][nopts[move-2]] === 0) {\n\t\t\t\t\t\t\toption[move][++nopts[move]] = candidate;\n\t\t\t\t\t\t\tcandidate_count += 1;\n\t\t\t\t\t\t} else if(Math.abs(option[move-2][nopts[move-2]] - candidate) !== 1) {\n\t\t\t\t\t\t\toption[move][++nopts[move]] = candidate;\n\t\t\t\t\t\t\tcandidate_count += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n  \t\t\t\t}\n\n  \t\t\t}\n  \t\t} else {\n  \t\t\tmove--;\n  \t\t\tnopts[move]--;\n  \t\t}\n  \t}\n\n    for(i = 0; i < this.state.size; i++) {\n      this.state.grid[i][solutions[this.state.currentView][i]] = \"C\";\n      console.log(i);\n    }\n\n  \tthis.setState({noSolution: count, currentView: 0});\n  }\n\n\trender() {\n\t\tconst style = {\n\t      margin:'auto',\n\t      width: \"auto\",\n\t      height:\"auto\",\n\t      backgroundColor:'darkorange',\n\t      color:'white',\n\t      fontSize:\"3em\"\n\t    }\n\t    const rows = this.state.grid.map((r, i) => {return (\n\t      <tr key={\"row_\"+i}>\n\t        {r.map((d, j) => {return(\n\t          <Square\n\t            key={i+\"_\"+j}/>\n\t              )\n\t            }\n\t          )\n\t        }\n\t        </tr>)\n\t        }\n\t      );\n\t\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\tIncrease Board Size\n\t          <button onClick={this.onBackward}> - </button>\n\t          <input type=\"number\" value={this.state.size} onChange={this.handleInput}/>\n\t          <button onClick={this.onForward}> + </button>\n\t        </div>\n\t        <div>\n\t        \t<button onClick={this.generateSolutions}> Generate Solutions </button>\n\t        \t{this.state.noSolution? \n\t        \t\t<div>\n\t        \t\t\t<button onClick={this.before}> - </button>\n\t\t\t         \t{this.state.currentView} of {this.state.noSolution}\n\t\t\t         \t<button onClick={this.after}> + </button>\n\t        \t\t</div>\n\t        \t\t: null}\n\t        </div>\n\t\t\t<div className=\"container\">\n\t\t        <table cellSpacing=\"0\" id=\"table\" style={style}>\n\t\t          <tbody>\n\t\t            {rows}\n\t\t          </tbody>\n\t\t        </table>\n\t\t    </div>\n\t\t</div>);\n\t}\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}